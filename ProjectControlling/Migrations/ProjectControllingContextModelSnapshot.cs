// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectControlling.Data;

#nullable disable

namespace ProjectControlling.Migrations
{
    [DbContext(typeof(ProjectControllingContext))]
    partial class ProjectControllingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("ProjectControlling.Models.ProjectDocument", b =>
                {
                    b.Property<int>("ProjectDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ProjectDocumentId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectDocuments");
                });

            modelBuilder.Entity("ProjectControlling.Models.ProjectWorkers", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProjectWorkersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProjectId", "WorkerId");

                    b.HasIndex("WorkerId");

                    b.ToTable("ProjectWorkers");
                });

            modelBuilder.Entity("ProjectControlling.Models.Projects", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProjectCustomerCompany")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectDeveloperCompany")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ProjectEndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectLeaderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectPriority")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ProjectStartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ProjectControlling.Models.Workers", b =>
                {
                    b.Property<int>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("WorkerEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkerLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkerMiddleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("WorkerId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("ProjectControlling.Models.ProjectDocument", b =>
                {
                    b.HasOne("ProjectControlling.Models.Projects", "Project")
                        .WithMany("ProjectDocuments")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectControlling.Models.ProjectWorkers", b =>
                {
                    b.HasOne("ProjectControlling.Models.Projects", "Project")
                        .WithMany("ProjectWorkers")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectControlling.Models.Workers", "Worker")
                        .WithMany("ProjectWorkers")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("ProjectControlling.Models.Projects", b =>
                {
                    b.Navigation("ProjectDocuments");

                    b.Navigation("ProjectWorkers");
                });

            modelBuilder.Entity("ProjectControlling.Models.Workers", b =>
                {
                    b.Navigation("ProjectWorkers");
                });
#pragma warning restore 612, 618
        }
    }
}
